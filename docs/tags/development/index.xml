<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Dmitry M - Veridis Quo</title>
    <link>https://dmitrym.online/tags/development/</link>
    <description>Recent content in Development on Dmitry M - Veridis Quo</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 22 May 2023 12:33:09 -0700</lastBuildDate>
    <atom:link href="https://dmitrym.online/tags/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3 ways to context switch with Git</title>
      <link>https://dmitrym.online/posts/three-ways-to-context-switch-with-git/</link>
      <pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://dmitrym.online/posts/three-ways-to-context-switch-with-git/</guid>
      <description></description>
    </item>
    <item>
      <title>Achievement Unlocked: Open Source Contribution</title>
      <link>https://dmitrym.online/posts/open-source-contribution/</link>
      <pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://dmitrym.online/posts/open-source-contribution/</guid>
      <description>&lt;p&gt;I did it. My Emacs package, &lt;a href=&#34;https://github.com/dmitrym0/org-hyperscheduler&#34;&gt;org-hyperscheduler&lt;/a&gt;, is now live on MELPA, &lt;a href=&#34;https://melpa.org/#/org-hyperscheduler&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m overjoyed. It&amp;rsquo;s a big deal for me, because I&amp;rsquo;ve been a long time beneficiary of open source software and I&amp;rsquo;m glad to finally be able to give back. It&amp;rsquo;s the first piece of software that I started out writing for myself and got to a state where it&amp;rsquo;s useable for other folks.&lt;/p&gt;&#xA;&lt;p&gt;Once version 1 was stable, I submitted a &lt;a href=&#34;https://github.com/melpa/melpa/pull/8057&#34;&gt;pull request&lt;/a&gt; to MELPA. Prior to that I ran through their &lt;a href=&#34;https://github.com/melpa/melpa/blob/master/CONTRIBUTING.org&#34;&gt;checklist&lt;/a&gt;. The checklist ensures that style guides are followed, deployment recipe works correctly, etc. Even though I went through the checklist twice, I still managed to miss a couple of things. The reviewer kindly pointed it out:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Managing  secrets in open source iOS apps</title>
      <link>https://dmitrym.online/posts/managing-secrets-in-ios-apps/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://dmitrym.online/posts/managing-secrets-in-ios-apps/</guid>
      <description>&lt;p&gt;One of the issues that open source authors have to deal with is secrets management. The small utility app I&amp;rsquo;m working on relies on Dropbox API. Before you can work with Dropbox API though, you have to generate an API key.&#xA;The API key identifies the application to Dropbox and needs to remain mostly secret. A bad actor could impersonate the application author by stealing the API key.&lt;/p&gt;&#xA;&lt;p&gt;This is a long winded way of saying that API keys must be kept out of public repositories. How can this be achieved?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Safari App Extensions; migrating from .safariextz</title>
      <link>https://dmitrym.online/posts/safari-app-extensions-migrating-from-safariextz/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://dmitrym.online/posts/safari-app-extensions-migrating-from-safariextz/</guid>
      <description>&lt;p&gt;I’ve dabbled with a Safari extension for a project on and off for a while. For Safari 12, I read that .safariextz-style extensions are no longer supported. I went forth to investigate what changed and how I could port my old extension to Safari 12.&lt;/p&gt;&#xA;&lt;p&gt;The short story is that the packaging has changed, but the bulk of the existing extension should just work once new conventions are adopted. I imagine the new changes are spurred by Apple’s desire to unify distribution — new extensions are wrapped as a mac application, require a signature and are distributed through the Mac App Store.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to check for X-Send-File (or X-Accel-Redirect)</title>
      <link>https://dmitrym.online/posts/how-to-check-for-x-sendfile/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://dmitrym.online/posts/how-to-check-for-x-sendfile/</guid>
      <description>&lt;p&gt;Some web requests should not be handled by the application framework. Requests hitting a dynamic API endpoint should be processed by application (in my case typically Ruby on Rails). Static assets (such as files) should be served by the webserver, bypassing Ruby on Rails completely.&lt;/p&gt;&#xA;&lt;p&gt;Why?&lt;/p&gt;&#xA;&lt;p&gt;There are a couple of reasons.&lt;/p&gt;&#xA;&lt;p&gt;The biggest one is performance. NGINX and Apache are significantly better and faster at serving files than a Ruby process. It’s the whole reason for their existence.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Efficient commit workflow with tig</title>
      <link>https://dmitrym.online/posts/tig-cheat-sheet/</link>
      <pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://dmitrym.online/posts/tig-cheat-sheet/</guid>
      <description>&lt;p&gt;One of the recommended source control practices is to &lt;a href=&#34;http://stackoverflow.com/questions/107264/how-often-to-commit-changes-to-source-control&#34;&gt;commit frequently, and often&lt;/a&gt;.   I prefer to keep my commits terse and focused, however in practice I’m working on a couple related but independent things in parallel. At commit time, I prefer to tease loosely related things apart and commit them separately.&lt;/p&gt;&#xA;&lt;p&gt;One way to do that is with the interactive git-add facility that can be invoked with &lt;code&gt;git add -p&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://dmitrym.online/ox-hugo/screenshot_2020-01-07_16-16-56.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;It’s a lovely little interface:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Working with shared memory on OS X</title>
      <link>https://dmitrym.online/posts/shared-memory-on-os-x/</link>
      <pubDate>Mon, 05 Apr 2010 00:00:00 +0000</pubDate>
      <guid>https://dmitrym.online/posts/shared-memory-on-os-x/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re working with Qt&amp;rsquo;s &lt;a href=&#34;https://duckduckgo.com/?q=qsharedmemory&amp;amp;t=osx&amp;amp;ia=web&#34;&gt;QSharedMemory&lt;/a&gt;, on Mac OS X you&amp;rsquo;re working with System V shared memory subsystem. If your data is sizable, the first limit you&amp;rsquo;ll hit in the maximum segment size, which is for some reason around 4 megs. To increase it invoke this magic incantation:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo sysctl -w kern.sysv.shmmax&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;33554432&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;and to see other shared mem related kernel variables:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sysctl -A&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;grep shm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;If you&amp;rsquo;d like these settings to remain after you reboot your machine follow the instruction &lt;a href=&#34;http://www.spy-hill.net/help/apple/SharedMemory.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
