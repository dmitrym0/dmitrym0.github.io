<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenSource on Dmitry M - Veridis Quo</title>
    <link>https://dmitrym0.github.io/tags/opensource/</link>
    <description>Recent content in OpenSource on Dmitry M - Veridis Quo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Jul 2022 00:00:00 -0700</lastBuildDate><atom:link href="https://dmitrym0.github.io/tags/opensource/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Achievement Unlocked: Open Source Contribution</title>
      <link>https://dmitrym0.github.io/posts/open-source-contribution/</link>
      <pubDate>Sun, 24 Jul 2022 00:00:00 -0700</pubDate>
      
      <guid>https://dmitrym0.github.io/posts/open-source-contribution/</guid>
      <description>I did it. My Emacs package, org-hyperscheduler, is now live on MELPA, here.
I&amp;rsquo;m overjoyed. It&amp;rsquo;s a big deal for me, because I&amp;rsquo;ve been a long time beneficiary of open source software and I&amp;rsquo;m glad to finally be able to give back. It&amp;rsquo;s the first piece of software that I started out writing for myself and got to a state where it&amp;rsquo;s useable for other folks.
Once version 1 was stable, I submitted a pull request to MELPA.</description>
    </item>
    
    <item>
      <title>Managing  secrets in open source iOS apps</title>
      <link>https://dmitrym0.github.io/posts/managing-secrets-in-ios-apps/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 -0800</pubDate>
      
      <guid>https://dmitrym0.github.io/posts/managing-secrets-in-ios-apps/</guid>
      <description>One of the issues that open source authors have to deal with is secrets management. The small utility app I&amp;rsquo;m working on relies on Dropbox API. Before you can work with Dropbox API though, you have to generate an API key. The API key identifies the application to Dropbox and needs to remain mostly secret. A bad actor could impersonate the application author by stealing the API key.
This is a long winded way of saying that API keys must be kept out of public repositories.</description>
    </item>
    
  </channel>
</rss>
